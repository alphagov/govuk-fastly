
backend F_origin0 {
  .connect_timeout = 1s;
  .dynamic = true;
  .port = "80";
  .host = "bouncer.${domain}";
  .first_byte_timeout = 15s;
  .max_connections = 200;
  .between_bytes_timeout = 10s;

  .probe = {
      .request = "HEAD /healthcheck/ready HTTP/1.1"  "Host: bouncer.${domain}" "Connection: close";
      .window = 2;
      .threshold = 1;
      .timeout = 2s;
      .interval = 5m;
    }
}

backend sick_force_grace {
  .host = "127.0.0.1";
  .port = "1";
  .probe = {
    .request = "invalid";
    .interval = 365d;
    .initial = 0;
  }
}


acl purge_ip_allowlist {
  # https://sites.google.com/a/digital.cabinet-office.gov.uk/gds/working-at-the-white-chapel-building/gds-internal-it/gds-internal-it-network-public-ip-addresses
  "217.196.229.77";
  "217.196.229.79";
  "217.196.229.80"/31;
  "51.149.8.0"/25;
  "51.149.8.128"/29;
  "3.9.56.99";
}

sub vcl_recv {
  ${indent(2, file("${module_path}/../shared/_boundary_headers.vcl.tftpl"))}

  # Require authentication for FASTLYPURGE requests unless from IP in ACL
  if (req.request == "FASTLYPURGE" && client.ip !~ purge_ip_allowlist) {
    set req.http.Fastly-Purge-Requires-Auth = "1";
  }

  ${indent(2, file("${module_path}/../shared/_security_txt_request.vcl"))}

  # Serve from stale for 24 hours if origin is sick
  set req.max_stale_if_error = 24h;

  # Default backend.
  set req.backend = F_origin0;

  # Serve stale if it exists.
  if (req.restarts > 0) {
    set req.backend = sick_force_grace;
    set req.http.Fastly-Backend-Name = "stale";
  }


#FASTLY recv

  if (req.request != "HEAD" && req.request != "GET" && req.request != "PURGE") {
    return(pass);
  }

  return(lookup);
}

sub vcl_fetch {
#FASTLY fetch


  set beresp.stale_if_error = 86400s;

  if ((beresp.status == 500 || beresp.status == 503) && req.restarts < 2 && (req.request == "GET" || req.request == "HEAD")) {
    set beresp.saintmode = 5s;
    return (restart);
  }

  if(req.restarts > 0 ) {
    set beresp.http.Fastly-Restarts = req.restarts;
  }

  if (beresp.http.Set-Cookie) {
    return (pass);
  }

  if (beresp.http.Cache-Control ~ "private") {
    return (pass);
  }

  if (beresp.status == 500 || beresp.status == 503) {
    set beresp.ttl = 1s;
    set beresp.stale_if_error = 5s;
    return (deliver);
  }

  if (beresp.http.Expires || beresp.http.Surrogate-Control ~ "max-age" || beresp.http.Cache-Control ~"(s-maxage|max-age)") {
    # keep the ttl here
  } else {
    # apply the default ttl
    set beresp.ttl = 3600s;
  }
}

sub vcl_hit {
#FASTLY hit
}

sub vcl_miss {
#FASTLY miss
}

sub vcl_deliver {
#FASTLY deliver
}

sub vcl_error {
  if (obj.status == 804) {
    set obj.status = 404;
    set obj.response = "Not Found";
    set obj.http.Fastly-Backend-Name = "force_not_found";

    synthetic {"
      <!DOCTYPE html>
      <html>
        <head>
          <title>Welcome to GOV.UK</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 0; }
            header { background: black; }
            h1 { color: white; font-size: 29px; margin: 0 auto; padding: 10px; max-width: 990px; }
            p { color: black; margin: 30px auto; max-width: 990px; }
          </style>
        </head>
        <body>
          <header><h1>GOV.UK</h1></header>
          <p>We cannot find the page you're looking for. Please try searching on <a href="https://www.gov.uk/">GOV.UK</a>.</p>
        </body>
      </html>"};

    return (deliver);
  }

  # Error 805
  ${indent(2, file("${module_path}/../shared/_security_txt_response.vcl"))}

  # Assume we've hit vcl_error() because the backend is unavailable
  if (req.restarts < 2) {
    return (restart);
  }

  synthetic {"
    <!DOCTYPE html>
    <html>
      <head>
        <title>GOV.UK Redirect</title>
        <style>
          body { font-family: Arial, sans-serif; margin: 0; }
          header { background: black; }
          h1 { color: white; font-size: 29px; margin: 0 auto; padding: 10px; max-width: 990px; }
          p { color: black; margin: 30px auto; max-width: 990px; }
        </style>
      </head>
      <body>
        <header><h1>GOV.UK</h1></header>
        <p>We are experiencing technical difficulties.</p>
        <p>The page you requested may be available on <a href='https://www.gov.uk'>GOV.UK</a> or the <a href='http://www.nationalarchives.gov.uk/webarchive/'>UK Government Web Archive</a>.</p>
      </body>
    </html>"};

  set obj.status = 503;
  return (deliver);

#FASTLY error
}

# pipe cannot be included.

sub vcl_pass {
#FASTLY pass
}

sub vcl_hash {
#FASTLY hash
}
